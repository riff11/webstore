<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jd="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Below configuration has been added to enable in memory DB H2DB -->
	<jd:embedded-database id="dataSource1" type="H2">
		<jd:script location="classpath:schema.sql" />
		<jd:script location="classpath:test-data.sql" />
	</jd:embedded-database>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.derkach.webstore" />

	<!-- JdbcTemplate -->
	<beans:bean class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource1"></beans:property>
	</beans:bean>

	<!-- <bean id="SpringJdbcDao" class="com."> <property name="dataSource" 
		ref="dataSource1" /> </bean> -->
	<beans:bean name="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="100000" />

	</beans:bean>
	
	
<!-- <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	<property name="packagesToScan">
		<list>
			List of java packages that contain the jaxb generated classes
			<value>com.intertech.consulting</value>
			<value>org.w3._2000._09.xmldsig_</value>
			<value>org.w3._2003._05.soap_envelope</value>
			<value>org.xmlsoap.schemas.ws</value>
		</list>
	</property>
</bean> -->
	
	<!-- <beans:bean name="xmlView" class="org.springframework.web.servlet.view.xml.MarshallingView"> 
		<beans:property name="marshaller" ref="xmlMarshaller" /> <beans:property 
		name="contentType" value="application/xml;charset=UTF-8" /> </beans:bean> -->

	<beans:bean depends-on="dataSource1"
		class="org.springframework.beans.factory.config.MethodInvokingBean">
		<beans:property name="targetClass"
			value="org.hsqldb.util.DatabaseManagerSwing" />
		<beans:property name="targetMethod" value="main" />
		<beans:property name="arguments">
			<beans:list>
				<beans:value>--url</beans:value>
				<beans:value>jdbc:h2:mem:dataSource1</beans:value>
				<!-- <beans:value>jdbc:hsqldb:mem:dataSource1</beans:value> -->
				<beans:value>--user</beans:value>
				<beans:value>sa</beans:value>
				<beans:value>--password</beans:value>
				<beans:value></beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

</beans:beans>
